(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{RiP0:function(t,e,n){"use strict";n.r(e),n.d(e,"_frontmatter",(function(){return c})),n.d(e,"default",(function(){return d}));var a=n("Fcif"),r=n("+I+c"),o=n("/FXl"),i=n("TjRS"),c=(n("aD51"),{});void 0!==c&&c&&c===Object(c)&&Object.isExtensible(c)&&!c.hasOwnProperty("__filemeta")&&Object.defineProperty(c,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/documentation/context.md"}});var m={_frontmatter:c},b=i.a;function d(t){var e=t.components,n=Object(r.a)(t,["components"]);return Object(o.b)(b,Object(a.a)({},m,n,{components:e,mdxType:"MDXLayout"}),Object(o.b)("h1",{id:"context"},"Context"),Object(o.b)("p",null,"When ",Object(o.b)("strong",{parentName:"p"},"matchUps")," and ",Object(o.b)("strong",{parentName:"p"},"tournamentParticipants")," are returned ",Object(o.b)("strong",{parentName:"p"},"inContext")," it means that they include contextual information that is not part of the TODS document structure from which they originated."),Object(o.b)("p",null,"For ",Object(o.b)("strong",{parentName:"p"},"matchUps")," attributes that are added include: structureId, structureName, drawId, eventId, eventName, tournamentId and tournamentName."),Object(o.b)("p",null,"For ",Object(o.b)("strong",{parentName:"p"},"tournamentParticipants"),", individualParticipants are added from individualParticipantIds."),Object(o.b)("p",null,"All elements that are returned ",Object(o.b)("strong",{parentName:"p"},"inContext")," include ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"/tods-competition-factory/utilities#makeDeepCopy"}),"converted extensions"),"."))}void 0!==d&&d&&d===Object(d)&&Object.isExtensible(d)&&!d.hasOwnProperty("__filemeta")&&Object.defineProperty(d,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/documentation/context.md"}}),d.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-documentation-context-md-72d843a700aa7ea6a21d.js.map