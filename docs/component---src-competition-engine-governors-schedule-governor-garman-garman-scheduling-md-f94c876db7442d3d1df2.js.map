{"version":3,"sources":["webpack:///../src/competitionEngine/governors/scheduleGovernor/garman/garmanScheduling.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"2OAMaA,G,UAAe,S,6PAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,qBADR,qBAGA,uFACA,uBAAK,gCAAMC,WAAW,OAAU,IAA3B,6CAEL,+BACA,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,yIAML,yIACA,0BAAS,sBAAQA,WAAW,KAAnB,SAAT,8HACA,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,gCAEL,iBAAQ,CACN,GAAM,kBADR,kBAGA,+OACA,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,mSAWL,4BAAW,sBAAQA,WAAW,KAAnB,iBAAX,qFACA,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,wNAOL,sLACA,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,6PAIL,+FAA8E,kBAAIA,WAAW,KAAf,WAA9E,yGAA2N,kBAAIA,WAAW,KAAf,aAA3N,0EAA2U,kBAAIA,WAAW,KAAf,sBAA3U,6BAAuZ,kBAAIA,WAAW,KAAf,WAAvZ,W,2PAKJJ,EAAWK,gBAAiB","file":"component---src-competition-engine-governors-schedule-governor-garman-garman-scheduling-md-f94c876db7442d3d1df2.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/charlesallen/Explorations/node/CourtHive/devel/tods-competition-factory/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"garman-scheduling\"\n    }}>{`Garman Scheduling`}</h1>\n    <p>{`The Revisied Garman System is based upon the following formula`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`TM = Int([ (L * C) / T] * (P - 1) + C)\n`}</code></pre>\n    <p>{`Where:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`C = Number of Courts\nT = Average Match time in Minutes\nP = Period within schedule\nL = Length of each Period\nTM = Total Matches\n`}</code></pre>\n    <p>{`Total Matches is the total of number of matches which can be expected to occur by the arrival of a given period.`}</p>\n    <p>{`A `}<strong parentName=\"p\">{`Delta`}</strong>{` between the calculations for two periods gives the number of matches that can be scheduled between the two given periods.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`Delta = TM(P) - TM(P - 1)\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"implementation\"\n    }}>{`Implementation`}</h2>\n    <p>{`The Compeition Factory implementation of the Garman formula defines a court availability schema and assumes that court availability varies across courts and that individual court availaiblity may not be continuous.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`{\n    identifier: \\`1\\`, courtId: \\`uuid1\\`, dateAvailability: [\n        {\n            date: '2020-01-01', startTime: '7:00', endTime: '17:00',\n            bookings: [\n                { startTime: '7:00', endTime: '8:00', bookingType: 'practice' }\n            ]\n        }\n    ]\n}\n`}</code></pre>\n    <p>{`The `}<strong parentName=\"p\">{`matchUpTiming`}</strong>{` function works for a single day and has the following parameters (and defaults):`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`date,                   // date in the form 'YYYY-MM-DD'\nstartTime='8:00',\nendTime='19:00',\nperiodLength=30\naverageMatchUpTime=90\ncourts                  // array of courts using court availability schema\n`}</code></pre>\n    <p>{`The output of this function is an array of periods which includes the number of matches which can be expected to be put on court at the start of each period:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`0: {periodStart: \"8:00\", add: 10, availableCourts: 10, new: 10, totalMatchUps: 10}\n1: {periodStart: \"8:30\", add: 0, availableCourts: 10, new: 0, totalMatchUps: 10}\n2: {periodStart: \"9:00\", add: 3, availableCourts: 10, new: 0, totalMatchUps: 13}\n`}</code></pre>\n    <p>{`One further difference from the reference implementation is the use of `}<em parentName=\"p\">{`endTime`}</em>{` rather than simply the specification of times at which periods start. An end time is assumed to be a `}<em parentName=\"p\">{`hard stop`}</em>{` and therefore no matches can be added in a period where there are not `}<em parentName=\"p\">{`averageMatchUpTime`}</em>{` minutes remaining before `}<em parentName=\"p\">{`endTime`}</em>{`.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}