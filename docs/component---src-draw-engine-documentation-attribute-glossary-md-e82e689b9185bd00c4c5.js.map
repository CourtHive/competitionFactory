{"version":3,"sources":["webpack:///../src/drawEngine/documentation/attributeGlossary.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---src-draw-engine-documentation-attribute-glossary-md-e82e689b9185bd00c4c5.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/charlesallen/Explorations/node/CourtHive/devel/tods-competition-factory/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"drawdefinition-attributes\"\n    }}>{`drawDefinition Attributes`}</h1>\n    <h2 {...{\n      \"id\": \"drawid\"\n    }}>{`drawId`}</h2>\n    <p>{`a unique identifier`}</p>\n    <h2 {...{\n      \"id\": \"entryprofile\"\n    }}>{`entryProfile`}</h2>\n    <p>{`defines attributes for each stage type (QUALIFYING, MAIN, CONSOLATION)`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\"><em parentName=\"strong\">{`drawSize`}</em></strong></li>\n      <li parentName=\"ul\">{`number of `}<strong parentName=\"li\"><em parentName=\"strong\">{`wildcardsCount`}</em></strong>{` to permit`}</li>\n      <li parentName=\"ul\">{`whether `}<strong parentName=\"li\"><em parentName=\"strong\">{`alternates`}</em></strong>{` are allowed`}</li>\n    </ul>\n    <p>{`attributes provide constraints on generation and manipulation of draw structures`}</p>\n    <h2 {...{\n      \"id\": \"entries\"\n    }}>{`entries`}</h2>\n    <p>{`an `}<strong parentName=\"p\"><em parentName=\"strong\">{`entry`}</em></strong>{` contains participantIds and participant entry details including entered stage`}</p>\n    <h2 {...{\n      \"id\": \"strutures\"\n    }}>{`strutures`}</h2>\n    <p>{`structures contain matchUps. all structures within a drawDefinition must be connected by links`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\"><em parentName=\"strong\">{`structureId`}</em></strong>{` - `}<em parentName=\"li\">{`required`}</em>{` - unique identifier`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\"><em parentName=\"strong\">{`structureName`}</em></strong>{` - `}<em parentName=\"li\">{`optional`}</em>{` - e.g. \"EAST\"`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\"><em parentName=\"strong\">{`structureType`}</em></strong>{` - `}<em parentName=\"li\">{`optional`}</em>{` - CONTAINER or ITEM; for grouped structures such as ROUND_ROBIN where there is no movement (linkage) between ITEMS but where the outcomes of the contained structures may be linked to other structures`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\"><em parentName=\"strong\">{`stage`}</em></strong>{` - `}<em parentName=\"li\">{`required`}</em>{` - QUALIFYING, MAIN, or CONSOLATION`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\"><em parentName=\"strong\">{`stageSequence`}</em></strong>{` - `}<em parentName=\"li\">{`optional`}</em>{` - structural link depth within a stage`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\"><em parentName=\"strong\">{`finishingPosition`}</em></strong>{` - `}<em parentName=\"li\">{`required`}</em>{` - how finishing position is determined, e.g. \"ROUND_OUTCOME\" or \"WIN_RATIO\"`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\"><em parentName=\"strong\">{`entries`}</em></strong>{` - `}<em parentName=\"li\">{`required`}</em>{` - array`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\"><em parentName=\"strong\">{`matchUps`}</em></strong>{` - `}<em parentName=\"li\">{`required`}</em>{` - array`}</li>\n    </ul>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"positionassignments\"\n    }}>{`positionAssignments`}</h2>\n    <p>{`array of drawPositions present in structure matchUps and participantIds, once assigned. `}<em parentName=\"p\">{`matchUps`}</em>{` do not need to contain participant details (until TODS exports are generated)`}</p>\n    <h2 {...{\n      \"id\": \"matchups\"\n    }}>{`matchUps`}</h2>\n    <p>{`an encounter between two participants; a participant may be an individual, a pair, or a team`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\"><em parentName=\"strong\">{`matchUpId`}</em></strong>{` - `}<em parentName=\"li\">{`required`}</em>{` - unique identifier`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\"><em parentName=\"strong\">{`roundNumber`}</em></strong>{` - `}<em parentName=\"li\">{`required`}</em></li>\n      <li parentName=\"ul\"><strong parentName=\"li\"><em parentName=\"strong\">{`roundPosition`}</em></strong>{` - `}<em parentName=\"li\">{`required for elimination structures`}</em>{` - not relevant in `}<em parentName=\"li\">{`roundRobin`}</em>{` structures`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\"><em parentName=\"strong\">{`drawPositions`}</em></strong>{` - `}<em parentName=\"li\">{`required`}</em>{` - used to reference the participants who participate in the matchUp`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\"><em parentName=\"strong\">{`finishingRound`}</em></strong>{` - `}<em parentName=\"li\">{`optional`}</em>{` - relevant only for elimination structures; defines depth from final round`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\"><em parentName=\"strong\">{`finishingPositionRange`}</em></strong>{` - `}<em parentName=\"li\">{`optional`}</em>{` - for convenience in determining finishingPositions and either participant progression across structure links, or for point allocation. a range is given for matchUp `}<em parentName=\"li\">{`winner`}</em>{` and `}<em parentName=\"li\">{`loser`}</em></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"links\"\n    }}>{`links`}</h2>\n    <p>{`a `}<strong parentName=\"p\">{`link`}</strong>{` defines the movement of participants between structures within a draw. `}<strong parentName=\"p\">{`links`}</strong>{` always have `}<em parentName=\"p\">{`source`}</em>{` and `}<em parentName=\"p\">{`target`}</em>{` structures`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\"><em parentName=\"strong\">{`structureId`}</em></strong>{` - `}<em parentName=\"li\">{`required`}</em></li>\n      <li parentName=\"ul\"><strong parentName=\"li\"><em parentName=\"strong\">{`roundNumber`}</em></strong>{` - `}<em parentName=\"li\">{`required for targets and for elimination source structures`}</em>{` - determines the finishing round within the source structure for participants who will progress across the link and the entry round into the target structure (FEED_IN structures)`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\"><em parentName=\"strong\">{`finishingPositions`}</em></strong>{` - `}<em parentName=\"li\">{`required for round robin source structures`}</em>{` - determines which finishing drawPositions within a round robin group will progress across the link`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\"><em parentName=\"strong\">{`feedProfile`}</em></strong>{` - `}<em parentName=\"li\">{`required for target structures`}</em>{` - determines the method by which participants will be placed in the target structure`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"feedprofile\"\n    }}>{`feedProfile`}</h2>\n    <p>{`method by which participants move across links into target structures`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\"><em parentName=\"strong\">{`DRAW`}</em></strong>{` - drawPositions within target structure will be drawn; seeding may be considered`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\"><em parentName=\"strong\">{`TOP_DOWN`}</em></strong>{` - drawPositions within target structure are assigned starting with the first `}<em parentName=\"li\">{`roundPosition`}</em>{` of the `}<em parentName=\"li\">{`roundNumber`}</em>{` of the target structure`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\"><em parentName=\"strong\">{`BOTTOM_UP`}</em></strong>{` - drawPositions within target structure are assigned starting at the final `}<em parentName=\"li\">{`roundPosition`}</em>{` of the `}<em parentName=\"li\">{`roundNumber`}</em>{` of the target structure`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\"><em parentName=\"strong\">{`RANDOM`}</em></strong>{` - drawPositions within target structure are assigned randomly`}</li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}