(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{XScD:function(t,e,a){"use strict";a.r(e),a.d(e,"_frontmatter",(function(){return i})),a.d(e,"default",(function(){return j}));var b=a("Fcif"),n=a("+I+c"),r=a("/FXl"),c=a("TjRS"),i=(a("aD51"),{});void 0!==i&&i&&i===Object(i)&&Object.isExtensible(i)&&!i.hasOwnProperty("__filemeta")&&Object.defineProperty(i,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/tournamentEngine/documentation/api.md"}});var l={_frontmatter:i},O=c.a;function j(t){var e=t.components,a=Object(n.a)(t,["components"]);return Object(r.b)(O,Object(b.a)({},l,a,{components:e,mdxType:"MDXLayout"}),Object(r.b)("h1",{id:"tournamentengine-api-reference"},"tournamentEngine API Reference"),Object(r.b)("h2",{id:"addcourt"},"addCourt"),Object(r.b)("hr",null),Object(r.b)("h2",{id:"addcourts"},"addCourts"),Object(r.b)("hr",null),Object(r.b)("h2",{id:"adddrawdefinition"},"addDrawDefinition"),Object(r.b)("hr",null),Object(r.b)("h2",{id:"adddrawentries"},"addDrawEntries"),Object(r.b)("hr",null),Object(r.b)("h2",{id:"addevent"},"addEvent"),Object(r.b)("hr",null),Object(r.b)("h2",{id:"addevententries"},"addEventEntries"),Object(r.b)("hr",null),Object(r.b)("h2",{id:"addparticipants"},"addParticipants"),Object(r.b)("hr",null),Object(r.b)("h2",{id:"addparticipantstogrouping"},"addParticipantsToGrouping"),Object(r.b)("hr",null),Object(r.b)("h2",{id:"addvenue"},"addVenue"),Object(r.b)("hr",null),Object(r.b)("h2",{id:"alloweddrawtypes"},"allowedDrawTypes"),Object(r.b)("p",null,"No parameters."),Object(r.b)("p",null,"Returns an array of names of allowed Draw Types, if any applicable policies have been applied to the tournamentRecord."),Object(r.b)("hr",null),Object(r.b)("h2",{id:"allowedmatchupformats"},"allowedMatchUpFormats"),Object(r.b)("p",null,"No parameters."),Object(r.b)("p",null,"Returns an array of TODS matchUpFormat codes for allowed scoring formats, if any applicable policies have been applied to the tournamentRecord."),Object(r.b)("hr",null),Object(r.b)("h2",{id:"alleventmatchups"},"allEventMatchUps"),Object(r.b)("hr",null),Object(r.b)("h2",{id:"alltournamentmatchups"},"allTournamentMatchUps"),Object(r.b)("hr",null),Object(r.b)("h2",{id:"assigndrawposition"},"assignDrawPosition"),Object(r.b)("hr",null),Object(r.b)("h2",{id:"assignmatchupcourt"},"assignMatchUpCourt"),Object(r.b)("hr",null),Object(r.b)("h2",{id:"assignseedpositions"},"assignSeedPositions"),Object(r.b)("p",null,"Assign ",Object(r.b)("strong",{parentName:"p"},"participantIds")," to ",Object(r.b)("strong",{parentName:"p"},"seedNumbers")," within a target draw structure."),Object(r.b)("pre",null,Object(r.b)("code",Object(b.a)({parentName:"pre"},{className:"language-json"}),"Defaults to { stage: 'MAIN', stageSequence: 1 } if { structureId: undefined }\n")),Object(r.b)("p",null,"The structure of an ",Object(r.b)("strong",{parentName:"p"},Object(r.b)("em",{parentName:"strong"},"assignment object"))," is as follows:"),Object(r.b)("pre",null,Object(r.b)("code",Object(b.a)({parentName:"pre"},{className:"language-json"}),'{\n  "seedNumber": 1,\n  "seedValue": 1,\n  "participantId": "uuid-of-participant"\n}\n')),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"seedNumber")," is unique while ",Object(r.b)("strong",{parentName:"p"},"seedValue")," can be any string representation."),Object(r.b)("p",null,"This allows seeds 5-8 to be visually represented as all having a seed value of '5' or '5-8'."),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:"left"}),"Parameters"),Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:"left"}),"Required"),Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:"left"}),"Type"),Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:"left"}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"drawId"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"Required"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"string"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"Unique identifier for target drawDefinition")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"assignments"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"Required"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"array"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"Array of assignment objects")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"eventId"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"Optional"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"string"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"Not required; optimizes locating draw witthin tournamentRecord")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"structureId"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"Optional"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"string"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"Apply assignments to a specific structure, identified by structureId")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"stage"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"Optional"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"string"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"Locate target structure by stage; used together with stageSequence")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"stageSequence"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"Optional"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"number"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"Locate target structure by stageSequence; used together with stage")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"useExistingSeedLimits"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"Optional"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"boolean"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"Restrict ability to assign seedNumbers beyond established limit")))),Object(r.b)("hr",null),Object(r.b)("h2",{id:"assigntiematchupparticipantid"},"assignTieMatchUpParticipantId"),Object(r.b)("hr",null),Object(r.b)("h2",{id:"bulkmatchupstatusupdate"},"bulkMatchUpStatusUpdate"),Object(r.b)("hr",null),Object(r.b)("h2",{id:"checkinparticipant"},"checkInParticipant"),Object(r.b)("hr",null),Object(r.b)("h2",{id:"checkoutparticipant"},"checkOutParticipant"),Object(r.b)("hr",null),Object(r.b)("h2",{id:"deletecourt"},"deleteCourt"),Object(r.b)("hr",null),Object(r.b)("h2",{id:"deletedrawdefinitions"},"deleteDrawDefinitions"),Object(r.b)("hr",null),Object(r.b)("h2",{id:"deleteevententries"},"deleteEventEntries"),Object(r.b)("hr",null),Object(r.b)("h2",{id:"deleteevents"},"deleteEvents"),Object(r.b)("hr",null),Object(r.b)("h2",{id:"deleteparticipants"},"deleteParticipants"),Object(r.b)("hr",null),Object(r.b)("h2",{id:"deletevenue"},"deleteVenue"),Object(r.b)("hr",null),Object(r.b)("h2",{id:"deletevenues"},"deleteVenues"),Object(r.b)("hr",null),Object(r.b)("h2",{id:"devcontext"},"devContext"),Object(r.b)("hr",null),Object(r.b)("h2",{id:"eventmatchups"},"eventMatchUps"),Object(r.b)("hr",null),Object(r.b)("h2",{id:"findmatchup"},"findMatchUp"),Object(r.b)("hr",null),Object(r.b)("h2",{id:"findparticipant"},"findParticipant"),Object(r.b)("hr",null),Object(r.b)("h2",{id:"findvenue"},"findVenue"),Object(r.b)("hr",null),Object(r.b)("h2",{id:"flusherrors"},"flushErrors"),Object(r.b)("hr",null),Object(r.b)("h2",{id:"generatedrawdefinition"},"generateDrawDefinition"),Object(r.b)("p",null,"This is a convenience method which handles most use cases for draw generation."),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:"left"}),"Parameters"),Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:"left"}),"Required"),Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:"left"}),"Type"),Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:"left"}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"eventId"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"Required"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"string"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"Unique identifier for the event within the current tournament")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"drawSize"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"Required"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"number"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"Number of draw postions there will be in the draw structure")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"drawType"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"Optional"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"string"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"ELIMININATION, ROUND ROBIN & etc, defaults to ELIMINATION")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"automated"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"Optional"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"boolean"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"Whether or not to automatically generate draw structure(s); defaults to true")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"matchUpType"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"Optional"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"string"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"SINGLES, DOUBLES, or TEAM")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"matchUpFormat"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"Optional"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"string"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"ITF TODS matchUpFormat code which describes scoring format")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"playoffMatchUpFormat"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"Optional"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"string"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"Alternate matchUpformat for connected playoff structures")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"tieFormat"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"Optional"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"object"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"includes collectionDefinitions and winCriteria")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"customName"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"Optional"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"string"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"Custom name for the generated draw structure")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"seedsCount"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"Optional"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"number"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"Desired seeds to be generated from rankings if no seededParticipants data")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"seedingProfile"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"Optional"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"string"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"Used to specify WATERFALL seeding, for instance, for Round Robin structures")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"seededParticipants"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"Optional"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"array"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"Array of seeding objects including seedValue and participantId")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"qualifyingRound"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"Optional"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"number"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"Round of the strucrure which qualifies participants for connected structure")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"structureOptions"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"Optional"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"object"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"Defines groupSize and playoffGroups for Round Robin structures")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"policyDefinitions"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"Optional"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"array"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"Seeding or avoidance policies to be used when placing participants in draw")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"qualifyingPositions"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"Optional"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"number"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:"left"}),"Number of positions in this draw structure to will be filled by qualifiers")))),Object(r.b)("hr",null),Object(r.b)("h2",{id:"generatemockparticipants"},"generateMockParticipants"),Object(r.b)("hr",null),Object(r.b)("h2",{id:"generateteamsfromparticipantattribute"},"generateTeamsFromParticipantAttribute"),Object(r.b)("hr",null),Object(r.b)("h2",{id:"getaudit"},"getAudit"),Object(r.b)("hr",null),Object(r.b)("h2",{id:"getcourts"},"getCourts"),Object(r.b)("hr",null),Object(r.b)("h2",{id:"getmatchupscheduledetails"},"getMatchUpScheduleDetails"),Object(r.b)("hr",null),Object(r.b)("h2",{id:"getparticipantscaleitem"},"getParticipantScaleItem"),Object(r.b)("hr",null),Object(r.b)("h2",{id:"getparticipantsigninstatus"},"getParticipantSignInStatus"),Object(r.b)("hr",null),Object(r.b)("h2",{id:"getstate"},"getState"),Object(r.b)("p",null,"No parameters."),Object(r.b)("p",null,"Returns a deep copy of the current tournamentEngine state."),Object(r.b)("pre",null,Object(r.b)("code",Object(b.a)({parentName:"pre"},{className:"language-js"}),"const { tournamentRecord } = tournamentEngine.getState();\n")),Object(r.b)("hr",null),Object(r.b)("h2",{id:"getvenues"},"getVenues"),Object(r.b)("hr",null),Object(r.b)("h2",{id:"load"},"load"),Object(r.b)("hr",null),Object(r.b)("h2",{id:"matchupactions"},"matchUpActions"),Object(r.b)("hr",null),Object(r.b)("h2",{id:"mergeparticipants"},"mergeParticipants"),Object(r.b)("hr",null),Object(r.b)("h2",{id:"modifycourtavailability"},"modifyCourtAvailability"),Object(r.b)("hr",null),Object(r.b)("h2",{id:"modifyparticipant"},"modifyParticipant"),Object(r.b)("hr",null),Object(r.b)("h2",{id:"newtournamentrecord"},"newTournamentRecord"),Object(r.b)("hr",null),Object(r.b)("h2",{id:"participantscaleitem"},"participantScaleItem"),Object(r.b)("hr",null),Object(r.b)("h2",{id:"participantssigninstatus"},"participantsSignInStatus"),Object(r.b)("hr",null),Object(r.b)("h2",{id:"rankbyratings"},"rankByRatings"),Object(r.b)("hr",null),Object(r.b)("h2",{id:"regeneratedrawdefinition"},"regenerateDrawDefinition"),Object(r.b)("hr",null),Object(r.b)("h2",{id:"removedrawpositionassignment"},"removeDrawPositionAssignment"),Object(r.b)("hr",null),Object(r.b)("h2",{id:"removeparticipantsfromallteams"},"removeParticipantsFromAllTeams"),Object(r.b)("hr",null),Object(r.b)("h2",{id:"removeparticipantsfromgroup"},"removeParticipantsFromGroup"),Object(r.b)("hr",null),Object(r.b)("h2",{id:"setdrawparticipantrepresentatives"},"setDrawParticipantRepresentatives"),Object(r.b)("hr",null),Object(r.b)("h2",{id:"setmatchupstatus"},"setMatchUpStatus"),Object(r.b)("hr",null),Object(r.b)("h2",{id:"setparticipantscaleitem"},"setParticipantScaleItem"),Object(r.b)("hr",null),Object(r.b)("h2",{id:"setparticipantscaleitems"},"setParticipantScaleItems"),Object(r.b)("hr",null),Object(r.b)("h2",{id:"setstate"},"setState"),Object(r.b)("hr",null),Object(r.b)("h2",{id:"settournamentcategories"},"setTournamentCategories"),Object(r.b)("hr",null),Object(r.b)("h2",{id:"settournamentenddate"},"setTournamentEndDate"),Object(r.b)("hr",null),Object(r.b)("h2",{id:"settournamentname"},"setTournamentName"),Object(r.b)("hr",null),Object(r.b)("h2",{id:"settournamentnotes"},"setTournamentNotes"),Object(r.b)("hr",null),Object(r.b)("h2",{id:"settournamentstartdate"},"setTournamentStartDate"),Object(r.b)("hr",null),Object(r.b)("h2",{id:"setvenueaddress"},"setVenueAddress"),Object(r.b)("hr",null),Object(r.b)("h2",{id:"tournamentmatchups"},"tournamentMatchUps"),Object(r.b)("hr",null),Object(r.b)("h2",{id:"version"},"version"),Object(r.b)("p",null,"Returns NPM package version"),Object(r.b)("hr",null))}void 0!==j&&j&&j===Object(j)&&Object.isExtensible(j)&&!j.hasOwnProperty("__filemeta")&&Object.defineProperty(j,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/tournamentEngine/documentation/api.md"}}),j.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-tournament-engine-documentation-api-md-c49aaf75333680dcb496.js.map