{"version":3,"sources":["webpack:///../src/documentation/timeItems.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"2OAMaA,G,UAAe,S,gNAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,cADR,cAGA,qBAAG,sBAAQC,WAAW,KAAnB,aAAH,sKACA,wCAAuB,sBAAQA,WAAW,KAAnB,WAAvB,0HAA6L,sBAAQA,WAAW,KAAnB,WAA7L,IAA6O,kBAAIA,WAAW,KAAf,YAA7O,+BAAiT,sBAAQA,WAAW,KAAnB,aAAjT,uDACA,iBAAQ,CACN,GAAM,qBADR,qBAGA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,8KAYL,iBAAQ,CACN,GAAM,kBADR,kBAGA,sCAAqB,sBAAQA,WAAW,KAAnB,aAArB,oEACA,iBAAQ,CACN,GAAM,gBADR,gBAGA,qBAAG,sBAAQA,WAAW,KAAnB,aAAH,0NACA,iBAAQ,CACN,GAAM,YADR,YAGA,qBAAG,sBAAQA,WAAW,KAAnB,aAAH,+KAAgO,sBAAQA,WAAW,KAAnB,aAAhO,gEAA8U,sBAAQA,WAAW,KAAnB,oBAA9U,YACA,iBAAQ,CACN,GAAM,mBADR,mBAGA,gGAA+E,sBAAQA,WAAW,KAAnB,aAA/E,2DACA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,mYAUL,iBAAQ,CACN,GAAM,uBADR,uBAGA,mQAAkP,sBAAQA,WAAW,KAAnB,aAAlP,qCACA,iBAAQ,CACN,GAAM,iCADR,iCAGA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,+LAUL,iBAAQ,CACN,GAAM,uCADR,uCAGA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,gP,8MAmBTJ,EAAWK,gBAAiB","file":"component---src-documentation-time-items-md-1e0a1a34223480558632.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/charlesallen/Explorations/node/CourtHive/devel/tods-competition-factory/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"time-items\"\n    }}>{`Time Items`}</h1>\n    <p><strong parentName=\"p\">{`timeItems`}</strong>{` can exist on any document element in TODS and are used to capture attributes which may change over time and where it is desierable to keep track of such changes.`}</p>\n    <p>{`For instance, a `}<strong parentName=\"p\">{`matchUp`}</strong>{` may be assigned to one court and scheduled, and then be interrupted and re-scheduled to start later on another court. `}<strong parentName=\"p\">{`matchUp`}</strong>{` `}<em parentName=\"p\">{`duration`}</em>{` can be calculated from all `}<strong parentName=\"p\">{`timeItems`}</strong>{` which relate to the starting and stopping of play.`}</p>\n    <h2 {...{\n      \"id\": \"object-properties\"\n    }}>{`Object properties`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const timeItem = {\n  itemSubject: SCALE,\n  itemType: RANKING,\n  itemSubType: undefined,\n  itemName: 'WTN'\n  itemValue: 13.20\n  createdAt: '2020-01-01T00:00'\n\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"internal-usage\"\n    }}>{`Internal usage`}</h2>\n    <p>{`In most cases `}<strong parentName=\"p\">{`timeItems`}</strong>{` are used internally by the various Competition Factory engines.`}</p>\n    <h3 {...{\n      \"id\": \"participants\"\n    }}>{`Participants`}</h3>\n    <p><strong parentName=\"p\">{`timeItems`}</strong>{` are used to track participant registration, sign-in and payment status as well as penalties and rankings and ratings values for different event categories. They are also used to capture manual seedings for events.`}</p>\n    <h3 {...{\n      \"id\": \"matchups\"\n    }}>{`matchUps`}</h3>\n    <p><strong parentName=\"p\">{`timeItems`}</strong>{` are used to capture scheduling attributes including start, stop, resume, end as well as assignment of court, referee & etc. Schedule related attributes are extracted from `}<strong parentName=\"p\">{`timeItems`}</strong>{` when a matchUp is retrieved with \"context\" and added to the `}<strong parentName=\"p\">{`matchUp.schedule`}</strong>{` object.`}</p>\n    <h2 {...{\n      \"id\": \"other-use-cases\"\n    }}>{`Other use cases`}</h2>\n    <p>{`Competition Factory defines methods for adding and retrieving arbitrary `}<strong parentName=\"p\">{`timeItems`}</strong>{` for the tournament record, event, and drawDefinitions.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`tournamentEngine.addTournamentTimeItem({ timeItem });\ntournamentEngine.addEventTimeItem({ eventId, timeItem });\ntournamentEngine.addDrawDefinitionTimeItem({ drawId, timeItem });\n\ntournamentEngine.getTournamentTimeItem({ itemAttributes });\ntournamentEngine.getEventTimeItem({ eventId, itemAttributes });\ntournamentEngine.getDrawDefinitionTimeItem({ drawId, itemAttributes });\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"ranking-and-ratings\"\n    }}>{`Ranking and Ratings`}</h3>\n    <p>{`Sometimes a tournament organizer may want to fetch player Rankings and Ratings from a remote service. In such scenarios it is desireable to both capture a time stamp for when the last retrieval occurred and be able to query an event's `}<strong parentName=\"p\">{`timeItems`}</strong>{` to be able to display the value.`}</p>\n    <h4 {...{\n      \"id\": \"adding-a-timeitem-to-an-event\"\n    }}>{`Adding a timeITem to an event`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const timeItem = {\n  itemSubject: RETRIEVAL,\n  itemType: RANKING,\n  itemName: 'U18',\n  itemValue: '2021-01-01T00:00',\n};\ntournamentEngine.addEventTimeItem({ eventId, timeItem });\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"retrieving-a-timeitem-from-an-event\"\n    }}>{`Retrieving a timeITem from an event`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const itemAttributes = {\n  itemSubject: RETRIEVAL,\n  itemType: RANKING,\n  itemName: 'U18',\n};\nconst {\n  timeItem: retrievedTimeItem,\n  message,\n} = tournamentEngine.getEventTimeItem({\n  eventId,\n  itemAttributes,\n});\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}