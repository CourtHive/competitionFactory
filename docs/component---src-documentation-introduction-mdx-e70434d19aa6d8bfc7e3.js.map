{"version":3,"sources":["webpack:///../src/documentation/introduction.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","drawEngine","Playground","result","newDrawDefinition","JSON","stringify","isMDXComponent"],"mappings":"qQAQaA,G,UAAe,S,oNAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,MAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,uBADR,uBAGA,uBAAK,gCAAMC,WAAW,OAAU,CAC5B,UAAa,gBADZ,6DAIL,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,qHAAsHC,SAAO,GAC9JL,QACAH,kBACAS,eACAC,gBAJ8J,gBAK9JV,IAL8J,EAM9JH,eAN8J,GAO7JO,QAAQ,eACZ,WACK,IAAMO,EAASF,IAAWG,oBAC1B,OAAO,kCACEC,KAAKC,UAAUH,GADjB,c,kNASfV,EAAWc,gBAAiB","file":"component---src-documentation-introduction-mdx-e70434d19aa6d8bfc7e3.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/posiwid/Explorations/node/CourtHive/devel/competitionFactory/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { drawEngine } from '../drawEngine';\nimport { Playground } from 'docz';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"drawengine-examples\"\n    }}>{`drawEngine Examples`}</h1>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import { drawEngine } from 'tods-competition-factory';\n`}</code></pre>\n    <Playground __position={0} __code={'() => {\\n  const result = drawEngine.newDrawDefinition()\\n  return <div>Result: {JSON.stringify(result)}.</div>\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      drawEngine,\n      Playground,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const result = drawEngine.newDrawDefinition();\n        return <div>\n        Result: {JSON.stringify(result)}.\n      </div>;\n      }}\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}